// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// RawClient is an autogenerated mock type for the RawClient type
type RawClient struct {
	mock.Mock
}

type RawClient_Expecter struct {
	mock *mock.Mock
}

func (_m *RawClient) EXPECT() *RawClient_Expecter {
	return &RawClient_Expecter{mock: &_m.Mock}
}

// CreateOrReplace provides a mock function with given fields: manifest, plan
func (_m *RawClient) CreateOrReplace(manifest []byte, plan bool) error {
	ret := _m.Called(manifest, plan)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrReplace")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, bool) error); ok {
		r0 = rf(manifest, plan)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RawClient_CreateOrReplace_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateOrReplace'
type RawClient_CreateOrReplace_Call struct {
	*mock.Call
}

// CreateOrReplace is a helper method to define mock.On call
//   - manifest []byte
//   - plan bool
func (_e *RawClient_Expecter) CreateOrReplace(manifest interface{}, plan interface{}) *RawClient_CreateOrReplace_Call {
	return &RawClient_CreateOrReplace_Call{Call: _e.mock.On("CreateOrReplace", manifest, plan)}
}

func (_c *RawClient_CreateOrReplace_Call) Run(run func(manifest []byte, plan bool)) *RawClient_CreateOrReplace_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte), args[1].(bool))
	})
	return _c
}

func (_c *RawClient_CreateOrReplace_Call) Return(_a0 error) *RawClient_CreateOrReplace_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *RawClient_CreateOrReplace_Call) RunAndReturn(run func([]byte, bool) error) *RawClient_CreateOrReplace_Call {
	_c.Call.Return(run)
	return _c
}

// Delete provides a mock function with given fields: manifest
func (_m *RawClient) Delete(manifest []byte) error {
	ret := _m.Called(manifest)

	if len(ret) == 0 {
		panic("no return value specified for Delete")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte) error); ok {
		r0 = rf(manifest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RawClient_Delete_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Delete'
type RawClient_Delete_Call struct {
	*mock.Call
}

// Delete is a helper method to define mock.On call
//   - manifest []byte
func (_e *RawClient_Expecter) Delete(manifest interface{}) *RawClient_Delete_Call {
	return &RawClient_Delete_Call{Call: _e.mock.On("Delete", manifest)}
}

func (_c *RawClient_Delete_Call) Run(run func(manifest []byte)) *RawClient_Delete_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte))
	})
	return _c
}

func (_c *RawClient_Delete_Call) Return(_a0 error) *RawClient_Delete_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *RawClient_Delete_Call) RunAndReturn(run func([]byte) error) *RawClient_Delete_Call {
	_c.Call.Return(run)
	return _c
}

// NewRawClient creates a new instance of RawClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRawClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *RawClient {
	mock := &RawClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
